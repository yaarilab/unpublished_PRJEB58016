

params.nproc = 20 //* @input @description:"How many processes to use for each step. Default 1"
params.mate="pair"
params.projectDir="${projectDir}" //* @input @description:"How many processes to use for each step. Default 1"

//* autofill



// Process Parameters for Mask_Primer_MaskPrimers:
params.Mask_Primer_MaskPrimers.method = ["align","align"]
params.Mask_Primer_MaskPrimers.mode = ["cut","cut"]
params.Mask_Primer_MaskPrimers.start = [0,0]
params.Mask_Primer_MaskPrimers.barcode = ["false","false"]
params.Mask_Primer_MaskPrimers.maxerror = [0.2,0.2]
params.Mask_Primer_MaskPrimers.revpr = ["false","false"]
params.Mask_Primer_MaskPrimers.maxlen = [50,50]
params.Mask_Primer_MaskPrimers.skiprc = ["false","true"]
params.Mask_Primer_MaskPrimers.failed = "true"
params.Mask_Primer_MaskPrimers.nproc = params.nproc
params.Mask_Primer_MaskPrimers.R1_primers = "${projectDir}/primers/empty.fasta"
params.Mask_Primer_MaskPrimers.R2_primers = "${projectDir}/primers/isotypes.human.fasta"



// Process Parameters for params.Cluster_UMI:
params.Cluster_UMI_p11.umi_field = "UMI"
params.Cluster_UMI_p11.umi_cluster_script = "${projectDir}/scripts/umi-v.0.4.py"

params.Cluster_Sets_cluster_sets.method = ["set","set"]
params.Cluster_Sets_cluster_sets.failed = ["true","true"]
params.Cluster_Sets_cluster_sets.nproc = params.nproc
params.Cluster_Sets_cluster_sets.cluster_field = ["CLID","CLID"]
params.Cluster_Sets_cluster_sets.ident = [0.9 ,0.9 ]
params.Cluster_Sets_cluster_sets.cluster_tool = "usearch"
params.Cluster_Sets_cluster_sets.cluster_exec = "/usr/local/bin/usearch"
params.Cluster_Sets_cluster_sets.set_field = ["UMI","UMI"]
params.Cluster_Sets_cluster_sets.barcode_field = ["UMI","UMI"]
params.Cluster_Sets_cluster_sets.usearch_version="11.0.667"


// Process Parameters for params.Align_Sets_align_sets:
params.align_sets.method = "muscle"
params.align_sets.bf = "UMI"
params.align_sets.div = "TRUE"
params.align_sets.failed = "false"
params.align_sets.nproc = params.nproc
params.align_sets.muscle_exec = "/usr/local/bin/muscle"
params.align_sets.offset_table = ""
params.align_sets.pf = "ISOTYPE"
params.align_sets.mode = ""
params.align_sets.primer_file = ""
params.align_sets.reverse = "false"
params.align_sets.alignset_script = "${projectDir}/scripts/run_alignset_batch.sh"
params.align_sets.alignset_script_batch_size = 500

// Process Parameters for params.Pair_Sequence_per_consensus_pair_seq:
params.Pair_Sequence_per_consensus_pair_seq.coord = "presto"
params.Pair_Sequence_per_consensus_pair_seq.nproc = params.nproc
params.Pair_Sequence_per_consensus_pair_seq.copy_fields_2 = "ISOTYPE"


// Process Parameters for params.Build_Consensus_build_consensus:
params.build_consensus.failed = "true"
params.build_consensus.nproc = params.nproc
params.build_consensus.barcode_field = ["UMI","UMI"]
params.build_consensus.primer_field = ["ISOTYPE","ISOTYPE"]
params.build_consensus.act = ["set","set"]
params.build_consensus.copy_field = ["ISOTYPE","ISOTYPE"]
params.build_consensus.mincount = [1,1]
params.build_consensus.minqual = [0,0]
params.build_consensus.minfreq = [0.6,0.6]
params.build_consensus.maxerror = ["none","none"]
params.build_consensus.prcons = ["0.4","0.4"]
params.build_consensus.maxgap = ["0.2","0.2"]
params.build_consensus.maxdiv = ["0.1","0.2"]
params.build_consensus.dep = ["false","false"]


// Process Parameters for params.Pair_Sequence_post_consensus_pair_seq:
//params.Pair_Sequence_post_consensus_pair_seq.coord = "presto"
//params.Pair_Sequence_post_consensus_pair_seq.nproc = params.nproc


// Process Parameters for params.Assemble_pairs_parse_log_AP:
params.Assemble_pairs_align_parse_log_AP.field_to_parse = "ID REFID LENGTH OVERLAP GAP ERROR IDENTITY PVALUE EVALUE1 EVALUE2"

params.Assemble_pairs_reference_parse_log_AP.field_to_parse = "ID REFID LENGTH OVERLAP GAP ERROR IDENTITY PVALUE EVALUE1 EVALUE2"



// Process Parameters for params.Assemble_pairs_assemble_pairs:
params.Assemble_pairs_align_assemble_pairs.method = "align"
params.Assemble_pairs_align_assemble_pairs.coord = "presto"
params.Assemble_pairs_align_assemble_pairs.rc = "tail"
params.Assemble_pairs_align_assemble_pairs.head_fields_R1 = "PRCONS PRFREQ"
params.Assemble_pairs_align_assemble_pairs.head_fields_R2 = "CONSCOUNT ISOTYPE"
params.Assemble_pairs_align_assemble_pairs.failed = "true"
params.Assemble_pairs_align_assemble_pairs.fasta = "true"
params.Assemble_pairs_align_assemble_pairs.nproc = params.nproc
params.Assemble_pairs_align_assemble_pairs.alpha = 0.00001
params.Assemble_pairs_align_assemble_pairs.maxerror = 0.3
params.Assemble_pairs_align_assemble_pairs.minlen = 8
params.Assemble_pairs_align_assemble_pairs.scanrev = "true"
params.Assemble_pairs_align_assemble_pairs.head_seqeunce_file = "R1"


// Process Parameters for params.Assemble_pairs_assemble_pairs:
params.Assemble_pairs_reference_assemble_pairs.method = "reference"
params.Assemble_pairs_reference_assemble_pairs.coord = "presto"
params.Assemble_pairs_reference_assemble_pairs.rc = "tail"
params.Assemble_pairs_reference_assemble_pairs.head_fields_R1 = "PRCONS PRFREQ"
params.Assemble_pairs_reference_assemble_pairs.head_fields_R2 = "CONSCOUNT ISOTYPE"
params.Assemble_pairs_reference_assemble_pairs.failed = "true"
params.Assemble_pairs_reference_assemble_pairs.fasta = "true"
params.Assemble_pairs_reference_assemble_pairs.nproc = params.nproc
params.Assemble_pairs_reference_assemble_pairs.aligner = "usearch"
params.Assemble_pairs_reference_assemble_pairs.usearch_version="11.0.667"
params.Assemble_pairs_reference_assemble_pairs.assemble_reference="${params.projectDir}reference/humanIGL_w_gaps/human_gl_IGLV_F+ORF+in-frame_P_w_gaps.fasta"
params.Assemble_pairs_reference_assemble_pairs.head_seqeunce_file = "R1"
	
params.split_constant.split_col = "ISOTYPE"
